{"name":"rOCCI-cli","tagline":"A ready-to-use shell client for OCCI enabled services","body":"rOCCI-cli - A Ruby OCCI Framework\r\n=================================\r\n\r\n[![Build Status](https://secure.travis-ci.org/EGI-FCTF/rOCCI-cli.png)](http://travis-ci.org/EGI-FCTF/rOCCI-cli)\r\n[![Dependency Status](https://gemnasium.com/EGI-FCTF/rOCCI-cli.png)](https://gemnasium.com/EGI-FCTF/rOCCI-cli)\r\n[![Gem Version](https://fury-badge.herokuapp.com/rb/occi-cli.png)](https://badge.fury.io/rb/occi-cli)\r\n[![Code Climate](https://codeclimate.com/github/EGI-FCTF/rOCCI-cli.png)](https://codeclimate.com/github/EGI-FCTF/rOCCI-cli)\r\n\r\nRequirements\r\n------------\r\n\r\n### Ruby\r\n* Ruby 1.9.3 or newer is required\r\n* RubyGems have to be installed\r\n\r\n### Examples\r\n#### For distros based on Debian:\r\n~~~\r\napt-get install ruby rubygems ruby-dev\r\n~~~\r\n~~~\r\nruby -v\r\n~~~\r\n\r\n**Unless you have Ruby >= 1.9.3, please, go to [rOCCI-cli#RVM](#rvm) and install RVM with a newer Ruby version.**\r\n\r\n#### For distros based on RHEL:\r\n~~~\r\nyum install ruby-devel openssl-devel gcc gcc-c++ ruby rubygems\r\n~~~\r\n~~~\r\nruby -v\r\n~~~\r\n\r\n**Unless you have Ruby >= 1.9.3, please, go to [rOCCI-cli#RVM](#rvm) and install RVM with a newer Ruby version.**\r\n\r\nTo use rOCCI-cli with Java, you need JRE 6 or 7. To build rOCCI-cli for Java, you need JDK 6 or 7.\r\n\r\nInstallation\r\n------------\r\n\r\n### From RubyGems.org\r\n\r\n**[Mac OS X has some special requirements for the installation. Detailed information can be found in doc/macosx.md.](doc/macosx.md)**\r\n\r\nTo install the most recent stable version\r\n\r\n    gem install occi-cli\r\n\r\nTo install the most recent beta version\r\n\r\n    gem install occi-cli --pre\r\n\r\n### From source (dev)\r\n\r\n**Installation from source should never be your first choice! Especially, if you are not familiar with RVM, Bundler, Rake and other dev tools for Ruby!**\r\n\r\n**However, if you wish to contribute to our project, this is the right way to start.**\r\n\r\nTo build and install the bleeding edge version from master\r\n\r\n    git clone git://github.com/EGI-FCTF/rOCCI-cli.git\r\n    cd rOCCI-cli\r\n    gem install bundler\r\n    bundle install\r\n    bundle exec rake test\r\n    rake install\r\n\r\n### From source, for Java\r\n\r\n**Notice:** In order to build rOCCI-cli for Java, you need working jRuby installation. We recommend using [rOCCI-cli#RVM](#rvm).\r\n\r\nTo build a Java jar file from master use\r\n\r\n    git clone git://github.com/EGI-FCTF/rOCCI-cli.git\r\n    cd rOCCI-cli\r\n    gem install bundler\r\n    bundle install\r\n    warble\r\n\r\nFor Linux / Mac OS X you can create a OCCI Java executable from the jar file using\r\n\r\n    sudo echo '#!/usr/bin/java -jar' | cat - occi-cli.jar > occi ; sudo chmod +x occi\r\n\r\n### RVM\r\n\r\n**Notice:** Follow the RVM installation guide linked below, we recommend using the default 'Single-User installation'.\r\n\r\n**Warning:** NEVER install RVM as root! If you choose the 'Multi-User installation', use a different user account with sudo access instead!\r\n\r\n* [Installing RVM](https://rvm.io/rvm/install#explained)\r\n* Install Ruby\r\n\r\n~~~\r\nrvm requirements\r\nrvm install 1.9.3\r\nrvm use 1.9.3 --default\r\n~~~\r\n~~~\r\nruby -v\r\n~~~\r\n\r\nUsage\r\n-----\r\n### Client\r\nThe OCCI gem includes a client you can use directly from shell with the following auth methods: x509 (with --password, --user-cred and --ca-path), basic (with --username and --password), digest (with --username and --password), none. If you won't set a password using --password, the client will ask for it later on.\r\n\r\nTo find out more about available options and defaults use\r\n\r\n    occi --help\r\n\r\nTo list available resources use\r\n\r\n    occi --endpoint https://<ENDPOINT>:<PORT>/ --action list --resource compute --auth x509\r\n    occi --endpoint https://<ENDPOINT>:<PORT>/ --action list --resource storage --auth x509\r\n    occi --endpoint https://<ENDPOINT>:<PORT>/ --action list --resource network --auth x509\r\n\r\nTo describe available resources use\r\n\r\n    occi --endpoint https://<ENDPOINT>:<PORT>/ --action describe --resource compute --auth x509\r\n    occi --endpoint https://<ENDPOINT>:<PORT>/ --action describe --resource storage --auth x509\r\n    occi --endpoint https://<ENDPOINT>:<PORT>/ --action describe --resource network --auth x509\r\n\r\nTo describe specific resources use\r\n\r\n    occi --endpoint https://<ENDPOINT>:<PORT>/ --action describe --resource /compute/<OCCI_ID> --auth x509\r\n    occi --endpoint https://<ENDPOINT>:<PORT>/ --action describe --resource /storage/<OCCI_ID> --auth x509\r\n    occi --endpoint https://<ENDPOINT>:<PORT>/ --action describe --resource /network/<OCCI_ID> --auth x509\r\n\r\nTo list available OS templates or Resource templates use\r\n\r\n    occi --endpoint https://<ENDPOINT>:<PORT>/ --action list --resource os_tpl --auth x509\r\n    occi --endpoint https://<ENDPOINT>:<PORT>/ --action list --resource resource_tpl --auth x509\r\n\r\nTo describe a specific OS template or Resource template use\r\n\r\n    occi --endpoint https://<ENDPOINT>:<PORT>/ --action describe --resource os_tpl#debian6 --auth x509\r\n    occi --endpoint https://<ENDPOINT>:<PORT>/ --action describe --resource resource_tpl#small --auth x509\r\n\r\nTo create a compute resource with mixins use\r\n\r\n    occi --endpoint https://<ENDPOINT>:<PORT>/ --action create --resource compute --mixin os_tpl#debian6 --mixin resource_tpl#small --attribute occi.core.title=\"My rOCCI VM\" --auth x509\r\n\r\nTo delete a compute resource use\r\n\r\n    occi --endpoint https://<ENDPOINT>:<PORT>/ --action delete --resource /compute/<OCCI_ID> --auth x509\r\n\r\nChangelog\r\n---------\r\n\r\n### Version 4.3\r\n* Updated dependencies\r\n* Powered by rOCCI-core 4.3.x\r\n* New `discover` functionality\r\n\r\n### Version 4.2\r\n* Droppped the interactive mode (it might return in the future)\r\n* Updated internals\r\n* Updated user interface and human-readable rendering\r\n* __Includes interface changes incompatible with v4.1.x__\r\n\r\n### Version 4.1\r\n* Dropped Ruby 1.8.x support\r\n* Dropped jRuby 1.6.x support\r\n* Updated dependencies\r\n\r\n### Version 4.0\r\n* added extended support for OCCI-OS\r\n* updated human-readable output rendering\r\n* split the code into rOCCI-core, rOCCI-api and rOCCI-cli\r\n* internal changes, refactoring and some bugfixes\r\n\r\n### Version 3.1\r\n* added basic OS Keystone support\r\n* added support for PKCS12 credentials for X.509 authN\r\n* updated templates for plain output formatting\r\n* minor client API changes\r\n* several bugfixes\r\n\r\n### Version 3.0\r\n\r\n* many bugfixes\r\n* rewrote Core classes to use metaprogramming techniques\r\n* added VCR cassettes for reliable testing against prerecorded server responses\r\n* several updates to the OCCI Client\r\n* started work on an OCCI Client using AMQP as transport protocol\r\n* added support for keystone authentication to be used with the OpenStack OCCI server\r\n* updated dependencies\r\n* updated rspec tests\r\n* started work on cucumber features\r\n\r\n### Version 2.5\r\n\r\n* improved OCCI Client\r\n* improved documentation\r\n* several bugfixes\r\n\r\n### Version 2.4\r\n\r\n* Changed OCCI attribute properties from lowercase to first letter uppercase (e.g. type -> Type, default -> Default, ...)\r\n\r\n### Version 2.3\r\n\r\n* OCCI objects are now initialized with a list of attributes instead of a hash. Thus it is easier to check which\r\nattributes are expected by a class and helps prevent errors.\r\n* Parsing of a subset of the OVF specification is supported. Further parts of the specification will be covered in\r\nfuture versions of rOCCI.\r\n\r\n### Version 2.2\r\n\r\n* OCCI Client added. The client simplifies the execution of OCCI commands and provides shortcuts for often used steps.\r\n\r\n### Version 2.1\r\n\r\n* Several improvements to the gem structure and code documentation. First rSpec test were added. Readme has been extended to include instructions how the gem can be used.\r\n\r\n### Version 2.0\r\n\r\n* Starting with version 2.0 Florian Feldhaus and Piotr Kasprzak took over the development of the OCCI gem. The codebase was taken from the rOCCI framework and improved to be bundled as a standalone gem.\r\n\r\n### Version 1.X\r\n\r\n* Version 1.X of the OCCI gem has been developed by retr0h and served as a simple way to access the first OpenNebula OCCI implementation.\r\n\r\nDevelopment\r\n-----------\r\n\r\nCheckout latest version from GIT:\r\n\r\n    git clone git://github.com/EGI-FCTF/rOCCI-cli.git\r\n\r\nChange to rOCCI-cli folder\r\n\r\n    cd rOCCI-cli\r\n\r\nInstall dependencies for deployment\r\n\r\n    bundle install\r\n\r\n### Code Documentation\r\n\r\n[Code Documentation for rOCCI-cli by YARD](http://rubydoc.info/github/EGI-FCTF/rOCCI-cli/)\r\n\r\n### Continuous integration\r\n\r\n[Continuous integration for rOCCI-cli by Travis-CI](http://travis-ci.org/EGI-FCTF/rOCCI-cli/)\r\n\r\n### Contribute\r\n\r\n1. Fork it.\r\n2. Create a branch (git checkout -b my_markup)\r\n3. Commit your changes (git commit -am \"My changes\")\r\n4. Push to the branch (git push origin my_markup)\r\n5. Create an Issue with a link to your branch\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}